{
    "id": "4e36c4335cde0fd3",
    "slug": "a-taste-of-observable",
    "trashed": false,
    "description": "",
    "likes": 257,
    "publish_level": "live",
    "forks": 84,
    "fork_of": null,
    "has_importers": true,
    "update_time": "2023-06-20T21:24:08.138Z",
    "first_public_version": 1246,
    "paused_version": null,
    "publish_time": "2022-12-16T18:37:19.247Z",
    "publish_version": 1385,
    "latest_version": 1385,
    "thumbnail": "46182a3fb8f428c61d26cd1de1b4d497b7926348dbfeca6836970214e60a517e",
    "default_thumbnail": "49e3b8e7b5c25c76853ac31b4ed41e895e2facb91573182f4e68e995d0ccb899",
    "roles": [],
    "sharing": null,
    "owner": {
        "id": "f35c755083683fe5",
        "avatar_url": "https://avatars.observableusercontent.com/avatar/5a51c3b908225a581d20577e488e2aba8cbc9541c52982c638638c370c3e5e8e",
        "login": "observablehq",
        "name": "Observable",
        "bio": "Use data to think, together.",
        "home_url": "https://observablehq.com",
        "type": "team",
        "tier": "enterprise_2024"
    },
    "creator": {
        "id": "783616ba9fb55f5d",
        "avatar_url": "https://avatars.observableusercontent.com/avatar/fa1903f8171d4621ef49de28e0ff1fb965960ec87df175d8b543c4b09508b45b",
        "login": "jashkenas",
        "name": "Jeremy Ashkenas",
        "bio": "Used to work on @observablehq ‚Äî still think it rocks.\nüèç üåé üë∂",
        "home_url": "http://ashkenas.com",
        "tier": "public"
    },
    "authors": [],
    "collections": [
        {
            "id": "4d334192a9efe67a",
            "type": "public",
            "slug": "getting-started",
            "title": "Getting Started",
            "description": "These notebooks will walk you through the basics of Observable",
            "update_time": "2022-08-31T19:59:32.906Z",
            "pinned": false,
            "ordered": true,
            "custom_thumbnail": null,
            "default_thumbnail": "8036eb871612b05b1f2b76cac52056470502f66bed3c86e5c2e60813de42133f",
            "thumbnail": "8036eb871612b05b1f2b76cac52056470502f66bed3c86e5c2e60813de42133f",
            "listing_count": 3,
            "parent_collection_count": 2,
            "owner": {
                "id": "f35c755083683fe5",
                "avatar_url": "https://avatars.observableusercontent.com/avatar/5a51c3b908225a581d20577e488e2aba8cbc9541c52982c638638c370c3e5e8e",
                "login": "observablehq",
                "name": "Observable",
                "bio": "Use data to think, together.",
                "home_url": "https://observablehq.com",
                "type": "team",
                "tier": "enterprise_2024"
            }
        }
    ],
    "files": [
        {
            "id": "ad63df82fb21088b53dbbf2afeffd62ab50e337ca30b9ccdef4bde286982a994f98bbc163c0ce8fbf73531724f69c0ae6220a5792de3ea5b80076f4c9002ce9e",
            "url": "https://static.observableusercontent.com/files/ad63df82fb21088b53dbbf2afeffd62ab50e337ca30b9ccdef4bde286982a994f98bbc163c0ce8fbf73531724f69c0ae6220a5792de3ea5b80076f4c9002ce9e",
            "download_url": "https://static.observableusercontent.com/files/ad63df82fb21088b53dbbf2afeffd62ab50e337ca30b9ccdef4bde286982a994f98bbc163c0ce8fbf73531724f69c0ae6220a5792de3ea5b80076f4c9002ce9e?response-content-disposition=attachment%3Bfilename*%3DUTF-8%27%27collaboration.mov",
            "name": "collaboration.mov",
            "create_time": "2023-02-03T00:30:02.886Z",
            "mime_type": "video/quicktime",
            "status": "public",
            "size": 3673433,
            "content_encoding": null,
            "private_bucket_id": null
        },
        {
            "id": "01d960459bdc930e1641fdbf0878af6dbde40edefbed4051fadd2f99f958bd93d2740a0a7b80601678255dfbdbea5539b1ac65cde961fe1a8312ade638f7f935",
            "url": "https://static.observableusercontent.com/files/01d960459bdc930e1641fdbf0878af6dbde40edefbed4051fadd2f99f958bd93d2740a0a7b80601678255dfbdbea5539b1ac65cde961fe1a8312ade638f7f935",
            "download_url": "https://static.observableusercontent.com/files/01d960459bdc930e1641fdbf0878af6dbde40edefbed4051fadd2f99f958bd93d2740a0a7b80601678255dfbdbea5539b1ac65cde961fe1a8312ade638f7f935?response-content-disposition=attachment%3Bfilename*%3DUTF-8%27%27ca_food.csv",
            "name": "ca_food.csv",
            "create_time": "2023-02-03T00:30:02.886Z",
            "mime_type": "text/csv",
            "status": "public",
            "size": 56496,
            "content_encoding": "gzip",
            "private_bucket_id": null
        },
        {
            "id": "a052dca96a4691cb44670d5622f10829f94e973fadc3a4ec7725b16e9c6574c5ccb4186e405e402e55f509cb0676e340e91c9f02096f72e3f284c23887107ea7",
            "url": "https://static.observableusercontent.com/files/a052dca96a4691cb44670d5622f10829f94e973fadc3a4ec7725b16e9c6574c5ccb4186e405e402e55f509cb0676e340e91c9f02096f72e3f284c23887107ea7",
            "download_url": "https://static.observableusercontent.com/files/a052dca96a4691cb44670d5622f10829f94e973fadc3a4ec7725b16e9c6574c5ccb4186e405e402e55f509cb0676e340e91c9f02096f72e3f284c23887107ea7?response-content-disposition=attachment%3Bfilename*%3DUTF-8%27%27cellMenuExample.mov",
            "name": "cellMenuExample.mov",
            "create_time": "2023-02-03T00:30:02.886Z",
            "mime_type": "video/quicktime",
            "status": "public",
            "size": 2534645,
            "content_encoding": null,
            "private_bucket_id": null
        },
        {
            "id": "64d09ac279eab64d058b47a6aaf19b18d2700e1751505efae7dd92e4a8341104cacd31fbce626fbd6b87bb3ff9e3f6bbe1789879185d7176b67b60365948a151",
            "url": "https://static.observableusercontent.com/files/64d09ac279eab64d058b47a6aaf19b18d2700e1751505efae7dd92e4a8341104cacd31fbce626fbd6b87bb3ff9e3f6bbe1789879185d7176b67b60365948a151",
            "download_url": "https://static.observableusercontent.com/files/64d09ac279eab64d058b47a6aaf19b18d2700e1751505efae7dd92e4a8341104cacd31fbce626fbd6b87bb3ff9e3f6bbe1789879185d7176b67b60365948a151?response-content-disposition=attachment%3Bfilename*%3DUTF-8%27%27csv-to-datatable.mov",
            "name": "csv-to-datatable.mov",
            "create_time": "2023-02-03T00:30:02.886Z",
            "mime_type": "video/quicktime",
            "status": "public",
            "size": 8683204,
            "content_encoding": null,
            "private_bucket_id": null
        },
        {
            "id": "4332704611968d9b91f133dfb6042745813785d822259fd254cd240d0569172194c129dc292e007896c8e4678d5ee9704cddef73201cde5d8c6bdde5efa44696",
            "url": "https://static.observableusercontent.com/files/4332704611968d9b91f133dfb6042745813785d822259fd254cd240d0569172194c129dc292e007896c8e4678d5ee9704cddef73201cde5d8c6bdde5efa44696",
            "download_url": "https://static.observableusercontent.com/files/4332704611968d9b91f133dfb6042745813785d822259fd254cd240d0569172194c129dc292e007896c8e4678d5ee9704cddef73201cde5d8c6bdde5efa44696?response-content-disposition=attachment%3Bfilename*%3DUTF-8%27%27community-examples.mov",
            "name": "community-examples.mov",
            "create_time": "2023-02-03T00:30:02.886Z",
            "mime_type": "video/quicktime",
            "status": "public",
            "size": 25900418,
            "content_encoding": null,
            "private_bucket_id": null
        },
        {
            "id": "8339e6ed7041fdc57db68e1d58a237d9dcd09045485d9390f7ec64b23079dd372a66f6bed32dbe11e926d5629fc21640dfbfade33f7c7b1b91403ca632849ebd",
            "url": "https://static.observableusercontent.com/files/8339e6ed7041fdc57db68e1d58a237d9dcd09045485d9390f7ec64b23079dd372a66f6bed32dbe11e926d5629fc21640dfbfade33f7c7b1b91403ca632849ebd",
            "download_url": "https://static.observableusercontent.com/files/8339e6ed7041fdc57db68e1d58a237d9dcd09045485d9390f7ec64b23079dd372a66f6bed32dbe11e926d5629fc21640dfbfade33f7c7b1b91403ca632849ebd?response-content-disposition=attachment%3Bfilename*%3DUTF-8%27%27taste-of-observable-2.png",
            "name": "taste-of-observable-2.png",
            "create_time": "2023-02-03T01:39:25.799Z",
            "mime_type": "image/png",
            "status": "public",
            "size": 356298,
            "content_encoding": null,
            "private_bucket_id": null
        },
        {
            "id": "57711c78d0d8e78831ba8633c6e00c4978599bd2d8ef8343737050d263ad3bfe8c1e3a7e46d789a8966013a948b435946cb59e208d396a72fd8b36ec43c3e619",
            "url": "https://static.observableusercontent.com/files/57711c78d0d8e78831ba8633c6e00c4978599bd2d8ef8343737050d263ad3bfe8c1e3a7e46d789a8966013a948b435946cb59e208d396a72fd8b36ec43c3e619",
            "download_url": "https://static.observableusercontent.com/files/57711c78d0d8e78831ba8633c6e00c4978599bd2d8ef8343737050d263ad3bfe8c1e3a7e46d789a8966013a948b435946cb59e208d396a72fd8b36ec43c3e619?response-content-disposition=attachment%3Bfilename*%3DUTF-8%27%27chart-cell-clip.mov",
            "name": "chart-cell-clip.mov",
            "create_time": "2023-03-27T23:42:28.275Z",
            "mime_type": "video/quicktime",
            "status": "public",
            "size": 8098168,
            "content_encoding": null,
            "private_bucket_id": null
        }
    ],
    "comments": [
        {
            "id": "18dcb73220794b64",
            "content": "Hi there! This is a comment. Anyone who has access can join the discussion!",
            "node_id": 1323,
            "create_time": "2023-02-03T15:29:16.048Z",
            "update_time": null,
            "resolved": false,
            "user": {
                "id": "b71e24965feea6d8",
                "avatar_url": "https://avatars.observableusercontent.com/avatar/323c217177f0f20e4e8ed3aa302fec1408cf22b57cbd726e37e76182d5f82a65",
                "login": "allisonhorst",
                "name": "Allison Horst",
                "bio": "Stats | Art | Data Science | SciComm | Teaching",
                "home_url": "https://www.allisonhorst.com/",
                "tier": "pro"
            }
        }
    ],
    "commenting_lock": null,
    "suggestion_from": null,
    "suggestions_to": [],
    "version": 1385,
    "title": "A taste of Observable",
    "license": null,
    "copyright": "",
    "nodes": [
        {
            "id": 0,
            "name": "",
            "value": "# A taste of Observable",
            "pinned": false,
            "mode": "md",
            "data": null,
            "outputs": []
        },
        {
            "id": 853,
            "name": "",
            "value": "Working in Observable notebooks puts you and your team on the fast track from raw data to clear insights. Here‚Äôs a taste of how Observable accelerates collaborative data work. ",
            "pinned": false,
            "mode": "md",
            "data": null,
            "outputs": []
        },
        {
            "id": 1360,
            "name": "",
            "value": "## Notebooks: your web-based data canvas\n",
            "pinned": false,
            "mode": "md",
            "data": null,
            "outputs": []
        },
        {
            "id": 1359,
            "name": "",
            "value": "The document you‚Äôre reading now is an Observable **notebook**. Notebooks are web-based interactive canvases where you can combine data, code, and interaction in one place. There is no set-up or installation needed to get started. With an Observable account, you can add a new notebook with just one click, then immediately start creating. ",
            "pinned": false,
            "mode": "md",
            "data": null,
            "outputs": []
        },
        {
            "id": 1367,
            "name": null,
            "value": "tasteOfObservable2 = FileAttachment(\"taste-of-observable-2.png\").image({width: 650})",
            "pinned": false,
            "mode": "js",
            "data": null,
            "outputs": []
        },
        {
            "id": 1357,
            "name": "",
            "value": "Notebooks are made up of [**cells**](https://observablehq.com/@observablehq/adding-cells) where you can add content in Markdown, JavaScript, SQL, or HTML. Notebooks are also _alive_, which means you can explore and tinker with cells as a viewer. In this very notebook, you‚Äôll see blue text boxes prompting you to change text, update code, and interact with data visualizations!",
            "pinned": false,
            "mode": "md",
            "data": null,
            "outputs": []
        },
        {
            "id": 1356,
            "name": null,
            "value": "try_it(htl.html`<b>Try it!</b> The code below (in a JavaScript cell) returns the number of days that <a href=\"https://en.wikipedia.org/wiki/Leslie_Knope\">Leslie Knope</a> has been alive since she was born in Eagleton, Indiana on January 18, 1975. \n\n<br><br>1. In the code below, find the line that says \"const birthday = new Date( )\" \n<br>2. On that line, change the date to <b>your</b> birthday to see how many days you've been traveling around the sun (make sure to leave the quotes around the date)\n\n<br><br><b>Don't worry:</b> as a viewer you can tinker with cells, but your changes won't be saved in the notebook, or visible to anyone else.`)",
            "pinned": false,
            "mode": "js",
            "data": {},
            "outputs": []
        },
        {
            "id": 1355,
            "name": null,
            "value": "days_old = {\n  const today = new Date();\n  const birthday = new Date('1975-01-18'); // Update to your birthday here, in YYYY-MM-DD format!\n  const milliseconds = today - birthday;\n  const days = milliseconds / 1000 / 60 / 60 / 24; // 1000 milliseconds in a second, 60 seconds in a minute, 60 minutes in an hour, 24 hours in a day\n  return +days.toFixed(1);\n}",
            "pinned": true,
            "mode": "js",
            "data": null,
            "outputs": []
        },
        {
            "id": 1354,
            "name": "",
            "value": "We can include JavaScript code in Markdown cells so that context can be directly tied to data and analyses. (Goodbye, tedious and tenuous copy-pasting of values.)\n\nBelow, your age is compared to other (very important) measures. If you update the birth date above, the values in text below are automatically updated due to Observable‚Äôs [reactive dataflow](https://observablehq.com/@observablehq/learning-observable-reactive-dataflow).",
            "pinned": false,
            "mode": "md",
            "data": null,
            "outputs": []
        },
        {
            "id": 1353,
            "name": "",
            "value": "- In your time on earth, Peter Jackson‚Äôs Extended Version _Lord of the Rings_ trilogy (11.37 hours total) could have been replayed **${d3.format(',.0f')(days_old / 0.47375)} times**.\n- [Jonathan the Tortoise](https://en.wikipedia.org/wiki/Jonathan_(tortoise), the oldest known land animal (born c. 1832) has been alive approximately **${(((new Date() - new Date('1832-01-01'))/8.64e+7) / days_old).toFixed(1)} times longer than you**.\n- If every day of your life was a single drop of water, your life would fill approximately **${(days_old / 4000).toFixed(1)} liters** (based on [USGS estimates for water droplet volume](https://water.usgs.gov/edu/activity-drip.html)).",
            "pinned": false,
            "mode": "md",
            "data": null,
            "outputs": []
        },
        {
            "id": 1352,
            "name": "",
            "value": "## Fast, flexible, secure data access",
            "pinned": false,
            "mode": "md",
            "data": null,
            "outputs": []
        },
        {
            "id": 1351,
            "name": "",
            "value": "All Observable users can quickly [access data from local files](https://observablehq.com/@observablehq/introduction-to-data) like comma- and tab-separated value files, text files, images, Excel spreadsheets, JSON files and more. The [files pane](https://observablehq.com/@observablehq/file-attachments) (accessed by clicking the ${getIcon('filePane')} icon in the upper right of the notebook) guides you through uploading then inserting data from local files. \n\nThe video below shows a comma-separated value (CSV) file being attached to a notebook, then used to create a tabular view of the data, out-of-the-box.",
            "pinned": false,
            "mode": "md",
            "data": null,
            "outputs": []
        },
        {
            "id": 1350,
            "name": "",
            "value": "<div style=\"max-width: 640px; border-radius: 5px; overflow: hidden; padding: 1rem;\">\n    <video src=${await visibility().then(() => FileAttachment(\"csv-to-datatable.mov\").url())} alt=\"Video screenshot of Observable notebook. The user clicks on the Files Pane icon, attaches a csv file to the notebook, then presses the 'Insert' shortcut to add the csv to their cell. An interactive table of their data appears in the notebook.\" style=\"width: 100%; border-radius: 5px; box-shadow: 3px 3px 10px #ccc;\" autoplay loop muted></video>\n</div>",
            "pinned": false,
            "mode": "html",
            "data": {},
            "outputs": []
        },
        {
            "id": 1349,
            "name": "",
            "value": "In under 30 seconds, data from a local file is in the notebook, presented in a nice table, and ready for your next wrangling, analysis and visualization steps.",
            "pinned": false,
            "mode": "md",
            "data": null,
            "outputs": []
        },
        {
            "id": 1348,
            "name": "",
            "value": "[Pro and Enterprise](https://observablehq.com/pricing) users can additionally access data from cloud files, APIs, and databases, with the ability to create private notebooks. [Observable‚Äôs expanding list of database connectors](https://observablehq.com/@observablehq/databases) lets you quickly access databases including in PostgreSQL, MongoDB, MySQL, Google BigQuery, Snowflake, SQL Server, and Databricks. The [databases pane](https://observablehq.com/@observablehq/databases) (click on the ${getIcon('databasePane')} icon in the top right of this notebook) helps you to configure database connections and explore database contents, right in your notebook.",
            "pinned": false,
            "mode": "md",
            "data": null,
            "outputs": []
        },
        {
            "id": 1347,
            "name": "",
            "value": "## Instant data exploration",
            "pinned": false,
            "mode": "md",
            "data": null,
            "outputs": []
        },
        {
            "id": 1346,
            "name": "",
            "value": "Observable makes it possible for everyone on your team to interact with data. No- and low-code options like the [data table cell](https://observablehq.com/@observablehq/data-table-cell) below let anyone explore data interactively and do some essential data wrangling steps (like filtering, sorting, and slicing) without writing a line of code. \n",
            "pinned": false,
            "mode": "md",
            "data": null,
            "outputs": []
        },
        {
            "id": 1345,
            "name": null,
            "value": "try_it(htl.html`<b>Try it!</b> Update and explore the contents of the data table cell below, which contains California agricultural revenue data. Create subsets by clicking or dragging over levels in the interactive header cells, or using the no-code options for filtering, selecting columns, sorting, and slicing immediately below the table.`)",
            "pinned": false,
            "mode": "js",
            "data": null,
            "outputs": []
        },
        {
            "id": 1344,
            "name": "ca_food_revenue",
            "value": "",
            "pinned": true,
            "mode": "table",
            "data": {
                "source": {
                    "name": "ca_food.csv",
                    "type": "FileAttachment",
                    "dialect": "csv"
                },
                "operations": {
                    "from": {
                        "table": "ca_food"
                    },
                    "sort": [],
                    "slice": {
                        "to": null,
                        "from": null
                    },
                    "filter": [],
                    "select": {
                        "columns": null
                    }
                }
            },
            "outputs": []
        },
        {
            "id": 1343,
            "name": "",
            "value": "For more involved data work and analyses, you can always write code in JavaScript or HTML. Observable also has a [SQL cell](https://observablehq.com/@observablehq/sql-cell) that allows you to write SQL in notebooks. If you have data in a non-SQL format, you can easily convert it with [DuckDB](https://observablehq.com/@observablehq/duckdb), making it possible for anyone to query, wrangle and analyze tabular data from files or in-memory data with SQL.",
            "pinned": false,
            "mode": "md",
            "data": null,
            "outputs": []
        },
        {
            "id": 1342,
            "name": "",
            "value": "In the SQL cell below we access, wrangle, and calculate a summary statistic (2022 annual revenue by food category in California) from the attached ca_food.csv file.",
            "pinned": false,
            "mode": "md",
            "data": null,
            "outputs": []
        },
        {
            "id": 1341,
            "name": "",
            "value": "SELECT Category\n     , year(Date) as year\n     , sum(Dollars) as YearlyRevenue \n  FROM ca_food.csv\n WHERE year(Date) = 2021\n GROUP BY year(Date), Category",
            "pinned": true,
            "mode": "sql",
            "data": {
                "source": {
                    "name": "ca_food.csv",
                    "type": "FileAttachment",
                    "dialect": "csv"
                }
            },
            "outputs": []
        },
        {
            "id": 1340,
            "name": "",
            "value": "---\n## Getting from data to interactive visualization",
            "pinned": false,
            "mode": "md",
            "data": null,
            "outputs": []
        },
        {
            "id": 1382,
            "name": "",
            "value": "Whether creating a basic scatterplot, an interactive time series chart, or a data-driven masterpiece handcrafted with [D3](https://d3js.org/), Observable has tools to help you quickly get from data to visualization.",
            "pinned": false,
            "mode": "md",
            "data": null,
            "outputs": []
        },
        {
            "id": 1381,
            "name": "",
            "value": "Observable‚Äôs [chart cell](https://observablehq.com/@observablehq/chart-cell) helps you start building visualizations with [Observable Plot](https://observablehq.com/@observablehq/plot) ‚Äî a user-friendly library to quickly build and customize charts ‚Äî without writing a line of code. Select the chart cell from our searchable [add cell menu](https://observablehq.com/@observablehq/adding-cells). Then, choose your data source, variables, and other options from drop-down menus to make a chart, with the option to switch to JavaScript for further customization. \n\nThe video below shows how we can use the chart cell to create a stacked bar chart: ",
            "pinned": false,
            "mode": "md",
            "data": null,
            "outputs": []
        },
        {
            "id": 1380,
            "name": "",
            "value": "<div style=\"max-width: 640px; border-radius: 5px; overflow: hidden; padding: 1rem;\">\n    <video src=${await visibility().then(() => FileAttachment(\"chart-cell-clip.mov\").url())} alt=\"Video screenshot of Observable notebook, showing selection of the chart cell from the Add Cell menu. The chart cell interface appears, then the user makes selections for x and y variables, a reducer (sum) function to find total GDP by year, and choosing color to distinguish GDP totals by global region.\" style=\"width: 100%; border-radius: 5px; box-shadow: 3px 3px 10px #ccc;\" autoplay loop muted></video>\n</div>",
            "pinned": false,
            "mode": "html",
            "data": null,
            "outputs": []
        },
        {
            "id": 1339,
            "name": "",
            "value": "\nAlternatively, you can choose a specific chart type from the add cell menu to insert template Plot code in a new JavaScript cell. Update the starter code with your own data, variables and options to tailor it to your team‚Äôs needs. ",
            "pinned": false,
            "mode": "md",
            "data": null,
            "outputs": []
        },
        {
            "id": 1338,
            "name": "",
            "value": "\nThe video below shows how we select a line chart template from the add cell menu, then update with new data and variables to create an interpretable chart in seconds. ",
            "pinned": false,
            "mode": "md",
            "data": null,
            "outputs": []
        },
        {
            "id": 1337,
            "name": "",
            "value": "<div style=\"max-width: 640px; border-radius: 5px; overflow: hidden; padding: 1rem;\">\n    <video src=${await visibility().then(() => FileAttachment(\"cellMenuExample.mov\").url())} alt=\"Video screenshot of Observable notebook, showing selection of a line chart code snippet from the Add Cell menu. A new cell with starter code appears, then the coder replaces the example Apple stock data with subway ridership data to create an updated chart of ridership over time.\" style=\"width: 100%; border-radius: 5px; box-shadow: 3px 3px 10px #ccc;\" autoplay loop muted></video>\n</div>",
            "pinned": false,
            "mode": "html",
            "data": null,
            "outputs": []
        },
        {
            "id": 1336,
            "name": null,
            "value": "try_it(htl.html`<b>Try it!</b> Click on a gray plus sign (+) in the left margin to open the add cell menu. Start typing \"scatterplot,\" then select the Scatterplot chart snippet. A new JavaScript cell is added to the notebook containing working starter code. Run the cell (press the blue arrow at the top right of the cell, or use the Shift-Return keyboard shortcut) to execute the code and create an easy-to-update scatterplot!`)",
            "pinned": false,
            "mode": "js",
            "data": {},
            "outputs": []
        },
        {
            "id": 1335,
            "name": "",
            "value": "Expand the ways you and your team can dig into your data by adding interactivity to charts. [Observable inputs](https://observablehq.com/@observablehq/inputs) help you to quickly create lightweight widgets (like value sliders, radio buttons, and text boxes) that can be connected to chart elements to add interactivity.",
            "pinned": false,
            "mode": "md",
            "data": null,
            "outputs": []
        },
        {
            "id": 1334,
            "name": "",
            "value": "For example, the inputs below update the color gradient of circles (created in [D3](https://d3js.org/), available by default in all notebooks as part of [Observable's standard library](https://observablehq.com/@observablehq/recommended-libraries)) based on user selections. Try it out!",
            "pinned": false,
            "mode": "md",
            "data": null,
            "outputs": []
        },
        {
            "id": 1333,
            "name": null,
            "value": "viewof color1 = Inputs.color({label: \"Start color:\", value: \"#00ffcc\"})",
            "pinned": false,
            "mode": "js",
            "data": null,
            "outputs": []
        },
        {
            "id": 1332,
            "name": null,
            "value": "viewof color2 = Inputs.color({label: \"End color:\", value: \"#333aff\"})",
            "pinned": false,
            "mode": "js",
            "data": null,
            "outputs": []
        },
        {
            "id": 1331,
            "name": null,
            "value": "viewof play = Inputs.button(\"Replay!\")",
            "pinned": false,
            "mode": "js",
            "data": null,
            "outputs": []
        },
        {
            "id": 1330,
            "name": null,
            "value": "{\n  play;\n  \n  const circles = Array(15).fill(20); \n  const myColor = d3.scaleLinear().domain([0, 14]).range([color1, color2]);\n\n  const svg = d3.select(DOM.svg(700, 100))\n\n  svg.selectAll(\"circle\")\n    .data(circles)\n    .join(\"circle\")\n    .attr(\"cx\", (d, i) => i * 45 + d)\n    .attr(\"cy\", (_, i) => i % 2 == 0 ? 150 : -150)\n    .style(\"fill\", (d, i) => myColor(i))\n    .attr(\"r\", d => d)\n    .transition()\n    .duration(2000)\n    .ease(d3.easeElasticOut)\n    .attr(\"cy\", 50)\n    .delay((d, i, j) => i * 100)\n\n  return svg.node();\n}",
            "pinned": false,
            "mode": "js",
            "data": null,
            "outputs": []
        },
        {
            "id": 1329,
            "name": null,
            "value": "try_it(htl.html`<b>Try it!</b> The cell below shows an error because it is expecting a fill color that doesn't exist yet. It will appear once you've created a color input.<br><br>Open the add cell menu by clicking on a gray plus (+) button in the left margin just below this cell. Start typing \"color\", then choose the <b>Color</b> snippet, which creates a widget like the ones above. A new cell is added to your notebook. When you run it, you'll see your color-picking-widget appear, and the SVG below now has an interactive fill color.<br><br><b>Note:</b> this works because the fill option for the SVG below asks for a value named <i>color</i>, which is the default name of the input you just created.`)",
            "pinned": false,
            "mode": "js",
            "data": null,
            "outputs": []
        },
        {
            "id": 1328,
            "name": "",
            "value": "<svg width=\"200\" height =\"200\" id=\"creature\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 803.2 523.25\"><defs><style>.cls-1{fill:none;fill:${color};stroke-miterlimit:10;stroke-width:2px;}</style></defs><path class=\"cls-1\" d=\"M50.01,192.88c19.54,15.98,39.57,20.74,54,24,7.75,1.75,39.49,8.34,80-1,45.57-10.51,79.44-35.92,90-44,14.67-11.22,24.79-21.64,47-33,14.09-7.21,24.58-12.57,40-15,19.84-3.12,28.4,2,57-2,10.86-1.52,14.07-2.66,22-4,16.13-2.73,39.77-4.27,71,2,13.53,.58,23.29-2.56,29-5,32.9-14.05,43.2-52.62,45-60,2.39-9.84,.69-9.51,3-15,10.76-25.57,47.7-32.42,67-36,14.85-2.76,23.38-4.34,34-1,10.47,3.29,14.2,8.6,28,12,9.89,2.43,17.97,2.16,22,2,20.61-.84,27.96-8.74,41-4,1.21,.44,5.58,2.12,10,6,8.26,7.26,10.31,16.63,11,20,1.11,5.44,1.99,9.75,0,14-3.28,6.99-12.92,10.71-24,10-2.33,4.33-4.67,8.67-7,13-2.67-2.67-5.33-5.33-8-8-2,4.33-4,8.67-6,13-4-2.67-8-5.33-12-8v14c-5-2.33-10-4.67-15-7-2,3.33-4,6.67-6,10-10.16,.39-12.78,1.72-13,3-.46,2.75,9.71,8.2,20,8,4.19-.08,7.63-1.09,10-2,4.67-2,9.33-4,14-6,1.67,.67,3.33,1.33,5,2,1.33-3.33,2.67-6.67,4-10,2.33,2.33,4.67,4.67,7,7,1.67-4,3.33-8,5-12,2.33,3,4.67,6,7,9,2,3.05,4.15,7.52,3,12-1.3,5.06-6.27,8.04-22,14-23.03,8.74-26.84,7.84-38,14-9.36,5.16-7.96,6.5-19,13-18.11,10.66-21.29,6.74-32,14-17.47,11.85-22.97,31.78-28,50-1.17,4.24-2.11,8.73-1,14,.99,4.7,3.31,8.6,13,19,12.28,13.18,14.91,12.98,17,19,.43,1.24,3.64,11-1.5,20.5-2.17,4-5.06,6.56-7,8,1.6-12.46,1.01-15.73,0-16-1.63-.44-3.49,7.17-10.5,11.5-4.14,2.56-8.6,3.05-12,3,.43-.46,9.73-10.67,6-23-2.89-9.56-12.63-17.11-22-16-4.13,.49-7.23,2.55-9,4,2.65,1.45,9.91,5.89,14,15,1.15,2.57,5.11,11.39,1.5,21.5-2.61,7.31-7.8,11.44-10,13,2.26-9.79,1.95-12.62,1-13-1.58-.64-4.1,5.83-10.5,8.5-4.51,1.88-9.26,1.17-13,0,8.35-2.6,12.69-11.55,10-19-3.16-8.76-14.33-10.8-20-8-3.68,1.82-5.08,5.7-6,8,0,0-8.2,20.56-28.5,37.5-4.21,3.52-2.4,1.08-26,16-5.93,3.75-10.77,6.89-14,9-9.86,19.15-11.5,39.22-4.5,52.5,4.02,7.62,9.5,12.5,9.5,12.5,1.67,1.4,5.94,4.72,17,8,14.72,4.37,17.32,1.51,30,6,9.69,3.43,14.09,7.19,16,9,4.16,3.93,6.6,8.1,8,11-1.38-.41-3.06-.79-5-1-2.33-.25-4.37-.17-6,0,1.26,1.06,2.64,2.38,4,4,2.43,2.89,3.99,5.74,5,8-1.91-1.08-4.99-2.5-9-3-2.34-.29-4.39-.2-6,0,1.33,2.67,2.67,5.33,4,8l3,6c-1.94-.61-5.08-1.47-9-2-7.11-.97-12.63-.29-15,0-35.17,4.24-46.18,2.21-53,0-1.8-.58-3.2-1.04-5-2,0,0-8.12-4.32-17.2-21.81-.56-1.07-.9-1.92-.99-2.16-.75-2-.74-3.31-2.81-8.04-8.44-19.31-16.7-24.56-20-38-.38-1.57-1.51-6.54-4-13-1.52-3.94-3.01-7.05-4-9-3.67,8.43-9.74,21.22-19,36-8.21,13.11-10.57,14.44-11.5,20.5-2.89,18.73,14.57,39.29,32,49,3.26,1.82,5.92,2.83,9,4,19.54,7.44,27.23,2.68,40,9,11.62,5.75,17.84,15.92,17,17-.62,.79-5.1-3.13-12.5-3.5-3.88-.2-7.16,.65-9.5,1.5,1.22,.62,4.51,2.5,6.5,6.5,1.33,2.66,1.51,5.13,1.5,6.5-2.97-.75-6.88-1.45-11.5-1.5-5.08-.05-9.35,.7-12.5,1.5,2.33,4,4.67,8,7,12-5.22-.61-14.25-1.48-25.5-1.5-29.67-.05-53.9,5.82-60-3-1.6-2.31-6.41-12.08-7.5-14.5-.3-.67-.65-1.46-.93-2.41-.67-2.19-.55-3.73-3.07-11.59-8.28-25.83-18.84-33.05-28-53-5.49-11.95-4.25-14.92-5.61-23.76-1.3-8.47-3.28-14.86-5.39-20.24-1.96-5.01-6.36-15.89-16.5-26.5-.26-.27-4.25-4.41-9-8-18.22-13.76-43.7-16.35-50-17,0,0-34.95-3.6-67-8-40.5-5.56-70.44-17.42-85.5-23.5-28.61-11.55-49.29-19.82-71-40-23-21.38-34.42-43.88-39-54C2.83,187.97,1.17,165.06,1.01,153.88c-.2-13.85,1.57-30.69,5-31,3.16-.29,4.18,13.78,14,33,1.91,3.74,11.59,21.95,30,37Z\"/></svg>",
            "pinned": false,
            "mode": "html",
            "data": {},
            "outputs": []
        },
        {
            "id": 1327,
            "name": "",
            "value": "You might not be making disco animals in your daily data work, but this does highlight how quickly you can make notebook content (including charts, tables and text) interactive by linking it to Observable inputs.",
            "pinned": false,
            "mode": "md",
            "data": null,
            "outputs": []
        },
        {
            "id": 1326,
            "name": "",
            "value": "---\n## Get everyone (literally) on the same page",
            "pinned": false,
            "mode": "md",
            "data": null,
            "outputs": []
        },
        {
            "id": 1325,
            "name": "",
            "value": "Add team members [as viewers or editors](https://observablehq.com/@observablehq/permissions-for-teams-notebooks), then send them the notebook link in chat. No cloning or forking repos, no re-rendering to see updated versions, and no Git knowledge required for your team to all work together with data. (And Observable notebooks have built-in [version history](https://observablehq.com/@observablehq/history) that lets you see a record of changes, or even revert to previous versions.) \n\nWith live [multiplayer editing](https://observablehq.com/@observablehq/multiplayer-editing), different team members can work in the same notebook, at the same time. Avatars reveal who is working on what, when, so everyone knows where folks are editing. In the video below, a teammate is added as an editor, then starts updating the Plot code.",
            "pinned": false,
            "mode": "md",
            "data": null,
            "outputs": []
        },
        {
            "id": 1324,
            "name": "",
            "value": "<div style=\"max-width: 640px; border-radius: 5px; overflow: hidden; padding: 1rem;\">\n    <video src=${await visibility().then(() => FileAttachment(\"collaboration.mov\").url())} alt=\"Screen capture of an Observable notebook showing a user clicking the Share button, then adding another user as an editor. The new editor's avatar now appears in the notebook and is seen making edits.\" style=\"width: 100%; border-radius: 5px; box-shadow: 3px 3px 10px #ccc;\" autoplay loop muted></video>\n  </div>",
            "pinned": false,
            "mode": "html",
            "data": null,
            "outputs": []
        },
        {
            "id": 1323,
            "name": "",
            "value": "Reduce the distance between data and discussions with [in-notebook comments](https://observablehq.com/@observablehq/comments) like the one shown below. Anyone who can view the notebook ‚Äî you, your teammates, and stakeholders with permission ‚Äî can join the conversation. ",
            "pinned": false,
            "mode": "md",
            "data": null,
            "outputs": []
        },
        {
            "id": 1322,
            "name": "",
            "value": "## Community examples at-your-fingertips",
            "pinned": false,
            "mode": "md",
            "data": null,
            "outputs": []
        },
        {
            "id": 1321,
            "name": "",
            "value": "Whether motivated by efficiency, inspiration, or (we hope!) both, it‚Äôs straightforward to reuse content created and shared by you, your team, and other Observable community members so that you don‚Äôt have to start from scratch. ",
            "pinned": false,
            "mode": "md",
            "data": null,
            "outputs": []
        },
        {
            "id": 1320,
            "name": "",
            "value": "<div style=\"max-width: 640px; border-radius: 5px; overflow: hidden; padding: 1rem;\">\n    <video src=${await visibility().then(() => FileAttachment(\"community-examples.mov\").url())} alt=\"Video screenshot of Observable's Explore page, showing a large collection of many different notebooks, categorized by field (like Retail, Biotech and Pharma, Financial Strategy, and more).\" style=\"width: 100%; border-radius: 5px; box-shadow: 3px 3px 10px #ccc;\" autoplay loop muted></video>\n  <figcaption>A small sampling of the <b>thousands</b> of notebooks you can explore and reuse content from, as seen on <a href=\"https://observablehq.com/explore\">Observable's Explore page</a>.</figcaption>\n</div>",
            "pinned": false,
            "mode": "html",
            "data": {},
            "outputs": []
        },
        {
            "id": 1319,
            "name": "",
            "value": "[Observable imports](https://observablehq.com/@observablehq/import) let you instantly access and reuse content (functions, charts, text, and more) from shared notebooks. \n\nFor example, let‚Äôs say we want to iterate on the [D3 Zoomable Sunburst chart](https://observablehq.com/@d3/zoomable-sunburst), which exists in the `@d3/zoomable-sunburst` notebook on Observable, and is named _chart_. We can import it directly into this notebook (here, renaming it as `sunburst`) using:",
            "pinned": false,
            "mode": "md",
            "data": null,
            "outputs": []
        },
        {
            "id": 1318,
            "name": null,
            "value": "import {chart as sunburst} from \"@d3/zoomable-sunburst\"",
            "pinned": true,
            "mode": "js",
            "data": null,
            "outputs": []
        },
        {
            "id": 1317,
            "name": "",
            "value": "Then, we can access that chart (which brings along its own data!) by calling the chart in a new JavaScript cell. Play around with the sunburst graph below by clicking on different sections to zoom in, or clicking in the center circle to zoom out.",
            "pinned": false,
            "mode": "md",
            "data": null,
            "outputs": []
        },
        {
            "id": 1316,
            "name": null,
            "value": "sunburst",
            "pinned": false,
            "mode": "js",
            "data": {},
            "outputs": []
        },
        {
            "id": 1315,
            "name": "",
            "value": "Observable imports can also be a great tool for project organization because they give you and your team a way to modularize your work. Add themed chart templates, commonly used functions, or reusable text to source notebooks, then import from there for fast reuse and tidier notebooks.",
            "pinned": false,
            "mode": "md",
            "data": null,
            "outputs": []
        },
        {
            "id": 1311,
            "name": "",
            "value": "Want to get started in Observable? We‚Äôve got you covered! Explore our learning resources and documentation below to get up-and-running:\n\n- [Learning Observable](https://observablehq.com/collection/@observablehq/intro-to-observable): Our introductory course that covers the basics of getting started in Observable\n- [Tutorials](https://observablehq.com/tutorials): Visit our tutorials page for examples using real-world datasets, workshop materials, and links to important documentation\n- [Observable Documentation](https://observablehq.com/@observablehq/documentation): Your go-to place for official documentation on how to use Observable\n- [Quick Guides](https://observablehq.com/@observablehq/observable-quick-guides): guided examples to take your first steps in Observable\n  - [Learn how to write and run JavaScript on Observable](https://observablehq.com/guide/first-steps)\n  - [Write a tip calculator to dive deeper into JavaScript](https://observablehq.com/guide/tip-calculator)\n  - [Explore a datset using functional programming](https://observablehq.com/guide/functional-basics)\n  - [Follow clues in a database to solve a murder mystery](https://observablehq.com/guide/murder-mystery)\n  - [Create interactive charts from simple tabular data](https://observablehq.com/guide/athletes)\n  - [Visualize time series data with smoothed line charts](https://observablehq.com/guide/electricity)",
            "pinned": false,
            "mode": "md",
            "data": null,
            "outputs": []
        },
        {
            "id": 1314,
            "name": null,
            "value": "try_it(htl.html`<b>Try it!</b> The code below returns an error because it wants to create a force directed graph with D3, but the chart hasn't been imported yet.  Here, you'll import <b>chart</b> from the <a href=\"https://observablehq.com/@d3/force-directed-graph\">@d3/force-directed-graph</a> notebook to make the graph appear below.<br><br>Click on the gray plus button (+) just below this cell in the left margin to open the add cell menu, then start typing \"imports.\" Select the \"Import notebook\" option, which adds a JavaScript cell containing useful starter code. Update the code to import <b>chart</b>, renaming it to <b>forceGraph</b>, from the <b>@d3/force-directed-graph</b> notebook. Once you do, the JavaScript cell below will be executed, and the graph will appear below.<br><br><b>Hint:</b> import {chart as newName} from \"@account/notebook-slug\"`)",
            "pinned": false,
            "mode": "js",
            "data": null,
            "outputs": []
        },
        {
            "id": 1313,
            "name": null,
            "value": "forceGraph",
            "pinned": true,
            "mode": "js",
            "data": null,
            "outputs": []
        },
        {
            "id": 1312,
            "name": "",
            "value": "## Start learning, and join the Observable community",
            "pinned": false,
            "mode": "md",
            "data": null,
            "outputs": []
        },
        {
            "id": 1310,
            "name": "",
            "value": "We hope you‚Äôll join us on your journey to learn and use Observable in your data work. The vibrant Observable community of data practitioners and storytellers is here to help. Join us:\n\n- [Observable Community Forum](https://talk.observablehq.com/)\n- [Observable Community Slack Workspace](https://join.slack.com/t/observable-community/shared_invite/zt-1icwex7uf-ovIAS0PcuJ~ZgBToSyUs8w)",
            "pinned": false,
            "mode": "md",
            "data": null,
            "outputs": []
        },
        {
            "id": 1308,
            "name": null,
            "value": "import {try_it} from \"@observablehq/notes\"",
            "pinned": false,
            "mode": "js",
            "data": {},
            "outputs": []
        },
        {
            "id": 1309,
            "name": "",
            "value": "---\n## Appendix",
            "pinned": false,
            "mode": "md",
            "data": null,
            "outputs": []
        },
        {
            "id": 907,
            "name": null,
            "value": "async function icon2(file, {width = \"16px\"} = {}) {\n  const src = await file.url();\n  return () => htl.html`<img style=${{width, borderRadius: \"50%\", verticalAlign: \"center\"}} src=${src}>`;\n}",
            "pinned": false,
            "mode": "js",
            "data": null,
            "outputs": []
        },
        {
            "id": 1227,
            "name": null,
            "value": "// 2022.06: Fabian Iwand's suggested improvement for Note:\nnote = {\n  const scope = DOM.uid(\"note\").id;\n  const style = document.head.appendChild(htl.html`<style>\n    .${scope} {\n      border: 1px solid rgba(0, 0, 0, 0.05);\n      padding: 0.8rem;\n      max-width: 640px;\n      border-radius: 4px;\n      font: 13px/1.5em var(--sans-serif);\n      color: #444;\n      box-sizing: border-box;\n      background: hsl(55deg 80% 98%);\n    }\n    .${scope} code {\n      font-size: inherit;\n    }\n  `);\n  invalidation.then(() => style.remove());\n  return (contents) => htl.html`<div class=\"${scope}\">${contents}</div>`;\n}",
            "pinned": false,
            "mode": "js",
            "data": null,
            "outputs": []
        },
        {
            "id": 1307,
            "name": null,
            "value": "import {getIcon} from '@observablehq/product-education-icon-helpers'",
            "pinned": false,
            "mode": "js",
            "data": null,
            "outputs": []
        }
    ],
    "resolutions": [
        {
            "type": "notebook",
            "specifier": "@d3/zoomable-sunburst",
            "value": "86ddbc29bd33f9d6@357"
        },
        {
            "type": "notebook",
            "specifier": "@d3/force-directed-graph",
            "value": "a6c00de7c09bdfa1@327"
        },
        {
            "type": "notebook",
            "specifier": "@d3/example-components",
            "value": "7a9e12f9fb3d8e06@459"
        },
        {
            "type": "notebook",
            "specifier": "@d3/color-legend",
            "value": "a33468b95d0b15b0@808"
        }
    ],
    "schedule": null,
    "last_view_time": null
}